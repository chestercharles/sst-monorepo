import {
  ExceptionOptionType as __ExceptionOptionType,
  LazyJsonString as __LazyJsonString,
} from "@smithy/smithy-client";
import { IoTDataPlaneServiceException as __BaseException } from "./IoTDataPlaneServiceException";
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface DeleteThingShadowRequest {
  thingName: string | undefined;
  shadowName?: string;
}
export interface DeleteThingShadowResponse {
  payload: Uint8Array | undefined;
}
export declare class InternalFailureException extends __BaseException {
  readonly name: "InternalFailureException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalFailureException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class MethodNotAllowedException extends __BaseException {
  readonly name: "MethodNotAllowedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<MethodNotAllowedException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class UnauthorizedException extends __BaseException {
  readonly name: "UnauthorizedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnauthorizedException, __BaseException>
  );
}
export declare class UnsupportedDocumentEncodingException extends __BaseException {
  readonly name: "UnsupportedDocumentEncodingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      UnsupportedDocumentEncodingException,
      __BaseException
    >
  );
}
export interface GetRetainedMessageRequest {
  topic: string | undefined;
}
export interface GetRetainedMessageResponse {
  topic?: string;
  payload?: Uint8Array;
  qos?: number;
  lastModifiedTime?: number;
  userProperties?: Uint8Array;
}
export interface GetThingShadowRequest {
  thingName: string | undefined;
  shadowName?: string;
}
export interface GetThingShadowResponse {
  payload?: Uint8Array;
}
export interface ListNamedShadowsForThingRequest {
  thingName: string | undefined;
  nextToken?: string;
  pageSize?: number;
}
export interface ListNamedShadowsForThingResponse {
  results?: string[];
  nextToken?: string;
  timestamp?: number;
}
export interface ListRetainedMessagesRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface RetainedMessageSummary {
  topic?: string;
  payloadSize?: number;
  qos?: number;
  lastModifiedTime?: number;
}
export interface ListRetainedMessagesResponse {
  retainedTopics?: RetainedMessageSummary[];
  nextToken?: string;
}
export declare const PayloadFormatIndicator: {
  readonly UNSPECIFIED_BYTES: "UNSPECIFIED_BYTES";
  readonly UTF8_DATA: "UTF8_DATA";
};
export type PayloadFormatIndicator =
  (typeof PayloadFormatIndicator)[keyof typeof PayloadFormatIndicator];
export interface PublishRequest {
  topic: string | undefined;
  qos?: number;
  retain?: boolean;
  payload?: Uint8Array;
  userProperties?: __LazyJsonString | string;
  payloadFormatIndicator?: PayloadFormatIndicator;
  contentType?: string;
  responseTopic?: string;
  correlationData?: string;
  messageExpiry?: number;
}
export declare class RequestEntityTooLargeException extends __BaseException {
  readonly name: "RequestEntityTooLargeException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<RequestEntityTooLargeException, __BaseException>
  );
}
export interface UpdateThingShadowRequest {
  thingName: string | undefined;
  shadowName?: string;
  payload: Uint8Array | undefined;
}
export interface UpdateThingShadowResponse {
  payload?: Uint8Array;
}
