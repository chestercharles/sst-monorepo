import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  DeleteThingShadowCommandInput,
  DeleteThingShadowCommandOutput,
} from "./commands/DeleteThingShadowCommand";
import {
  GetRetainedMessageCommandInput,
  GetRetainedMessageCommandOutput,
} from "./commands/GetRetainedMessageCommand";
import {
  GetThingShadowCommandInput,
  GetThingShadowCommandOutput,
} from "./commands/GetThingShadowCommand";
import {
  ListNamedShadowsForThingCommandInput,
  ListNamedShadowsForThingCommandOutput,
} from "./commands/ListNamedShadowsForThingCommand";
import {
  ListRetainedMessagesCommandInput,
  ListRetainedMessagesCommandOutput,
} from "./commands/ListRetainedMessagesCommand";
import {
  PublishCommandInput,
  PublishCommandOutput,
} from "./commands/PublishCommand";
import {
  UpdateThingShadowCommandInput,
  UpdateThingShadowCommandOutput,
} from "./commands/UpdateThingShadowCommand";
import { IoTDataPlaneClient } from "./IoTDataPlaneClient";
export interface IoTDataPlane {
  deleteThingShadow(
    args: DeleteThingShadowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteThingShadowCommandOutput>;
  deleteThingShadow(
    args: DeleteThingShadowCommandInput,
    cb: (err: any, data?: DeleteThingShadowCommandOutput) => void
  ): void;
  deleteThingShadow(
    args: DeleteThingShadowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteThingShadowCommandOutput) => void
  ): void;
  getRetainedMessage(
    args: GetRetainedMessageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRetainedMessageCommandOutput>;
  getRetainedMessage(
    args: GetRetainedMessageCommandInput,
    cb: (err: any, data?: GetRetainedMessageCommandOutput) => void
  ): void;
  getRetainedMessage(
    args: GetRetainedMessageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRetainedMessageCommandOutput) => void
  ): void;
  getThingShadow(
    args: GetThingShadowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetThingShadowCommandOutput>;
  getThingShadow(
    args: GetThingShadowCommandInput,
    cb: (err: any, data?: GetThingShadowCommandOutput) => void
  ): void;
  getThingShadow(
    args: GetThingShadowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetThingShadowCommandOutput) => void
  ): void;
  listNamedShadowsForThing(
    args: ListNamedShadowsForThingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListNamedShadowsForThingCommandOutput>;
  listNamedShadowsForThing(
    args: ListNamedShadowsForThingCommandInput,
    cb: (err: any, data?: ListNamedShadowsForThingCommandOutput) => void
  ): void;
  listNamedShadowsForThing(
    args: ListNamedShadowsForThingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListNamedShadowsForThingCommandOutput) => void
  ): void;
  listRetainedMessages(
    args: ListRetainedMessagesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRetainedMessagesCommandOutput>;
  listRetainedMessages(
    args: ListRetainedMessagesCommandInput,
    cb: (err: any, data?: ListRetainedMessagesCommandOutput) => void
  ): void;
  listRetainedMessages(
    args: ListRetainedMessagesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRetainedMessagesCommandOutput) => void
  ): void;
  publish(
    args: PublishCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PublishCommandOutput>;
  publish(
    args: PublishCommandInput,
    cb: (err: any, data?: PublishCommandOutput) => void
  ): void;
  publish(
    args: PublishCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PublishCommandOutput) => void
  ): void;
  updateThingShadow(
    args: UpdateThingShadowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateThingShadowCommandOutput>;
  updateThingShadow(
    args: UpdateThingShadowCommandInput,
    cb: (err: any, data?: UpdateThingShadowCommandOutput) => void
  ): void;
  updateThingShadow(
    args: UpdateThingShadowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateThingShadowCommandOutput) => void
  ): void;
}
export declare class IoTDataPlane
  extends IoTDataPlaneClient
  implements IoTDataPlane {}
