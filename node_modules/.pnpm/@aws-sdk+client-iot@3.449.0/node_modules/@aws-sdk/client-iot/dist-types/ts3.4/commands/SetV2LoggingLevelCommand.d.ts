import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  IoTClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../IoTClient";
import { SetV2LoggingLevelRequest } from "../models/models_2";
export { __MetadataBearer, $Command };
export interface SetV2LoggingLevelCommandInput
  extends SetV2LoggingLevelRequest {}
export interface SetV2LoggingLevelCommandOutput extends __MetadataBearer {}
export declare class SetV2LoggingLevelCommand extends $Command<
  SetV2LoggingLevelCommandInput,
  SetV2LoggingLevelCommandOutput,
  IoTClientResolvedConfig
> {
  readonly input: SetV2LoggingLevelCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: SetV2LoggingLevelCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: IoTClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<SetV2LoggingLevelCommandInput, SetV2LoggingLevelCommandOutput>;
  private serialize;
  private deserialize;
}
