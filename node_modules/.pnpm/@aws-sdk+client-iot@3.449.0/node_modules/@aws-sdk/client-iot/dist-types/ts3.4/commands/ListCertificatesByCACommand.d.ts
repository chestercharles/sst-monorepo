import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  IoTClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../IoTClient";
import {
  ListCertificatesByCARequest,
  ListCertificatesByCAResponse,
} from "../models/models_1";
export { __MetadataBearer, $Command };
export interface ListCertificatesByCACommandInput
  extends ListCertificatesByCARequest {}
export interface ListCertificatesByCACommandOutput
  extends ListCertificatesByCAResponse,
    __MetadataBearer {}
export declare class ListCertificatesByCACommand extends $Command<
  ListCertificatesByCACommandInput,
  ListCertificatesByCACommandOutput,
  IoTClientResolvedConfig
> {
  readonly input: ListCertificatesByCACommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ListCertificatesByCACommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: IoTClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    ListCertificatesByCACommandInput,
    ListCertificatesByCACommandOutput
  >;
  private serialize;
  private deserialize;
}
