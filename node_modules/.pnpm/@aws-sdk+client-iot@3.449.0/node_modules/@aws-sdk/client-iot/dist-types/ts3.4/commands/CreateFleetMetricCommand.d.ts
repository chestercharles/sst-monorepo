import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  IoTClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../IoTClient";
import {
  CreateFleetMetricRequest,
  CreateFleetMetricResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CreateFleetMetricCommandInput
  extends CreateFleetMetricRequest {}
export interface CreateFleetMetricCommandOutput
  extends CreateFleetMetricResponse,
    __MetadataBearer {}
export declare class CreateFleetMetricCommand extends $Command<
  CreateFleetMetricCommandInput,
  CreateFleetMetricCommandOutput,
  IoTClientResolvedConfig
> {
  readonly input: CreateFleetMetricCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateFleetMetricCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: IoTClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CreateFleetMetricCommandInput, CreateFleetMetricCommandOutput>;
  private serialize;
  private deserialize;
}
