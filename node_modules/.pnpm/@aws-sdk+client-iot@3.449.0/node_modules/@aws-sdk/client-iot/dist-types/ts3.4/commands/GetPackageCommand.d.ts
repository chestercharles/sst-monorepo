import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  IoTClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../IoTClient";
import { GetPackageRequest, GetPackageResponse } from "../models/models_1";
export { __MetadataBearer, $Command };
export interface GetPackageCommandInput extends GetPackageRequest {}
export interface GetPackageCommandOutput
  extends GetPackageResponse,
    __MetadataBearer {}
export declare class GetPackageCommand extends $Command<
  GetPackageCommandInput,
  GetPackageCommandOutput,
  IoTClientResolvedConfig
> {
  readonly input: GetPackageCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetPackageCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: IoTClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<GetPackageCommandInput, GetPackageCommandOutput>;
  private serialize;
  private deserialize;
}
