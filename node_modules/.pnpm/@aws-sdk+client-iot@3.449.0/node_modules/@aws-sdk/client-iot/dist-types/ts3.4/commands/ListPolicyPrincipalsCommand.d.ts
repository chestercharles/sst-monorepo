import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  IoTClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../IoTClient";
import {
  ListPolicyPrincipalsRequest,
  ListPolicyPrincipalsResponse,
} from "../models/models_1";
export { __MetadataBearer, $Command };
export interface ListPolicyPrincipalsCommandInput
  extends ListPolicyPrincipalsRequest {}
export interface ListPolicyPrincipalsCommandOutput
  extends ListPolicyPrincipalsResponse,
    __MetadataBearer {}
export declare class ListPolicyPrincipalsCommand extends $Command<
  ListPolicyPrincipalsCommandInput,
  ListPolicyPrincipalsCommandOutput,
  IoTClientResolvedConfig
> {
  readonly input: ListPolicyPrincipalsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ListPolicyPrincipalsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: IoTClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    ListPolicyPrincipalsCommandInput,
    ListPolicyPrincipalsCommandOutput
  >;
  private serialize;
  private deserialize;
}
