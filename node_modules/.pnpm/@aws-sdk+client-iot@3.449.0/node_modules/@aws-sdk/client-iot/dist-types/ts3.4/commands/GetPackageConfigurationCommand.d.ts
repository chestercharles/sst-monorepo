import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  IoTClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../IoTClient";
import {
  GetPackageConfigurationRequest,
  GetPackageConfigurationResponse,
} from "../models/models_1";
export { __MetadataBearer, $Command };
export interface GetPackageConfigurationCommandInput
  extends GetPackageConfigurationRequest {}
export interface GetPackageConfigurationCommandOutput
  extends GetPackageConfigurationResponse,
    __MetadataBearer {}
export declare class GetPackageConfigurationCommand extends $Command<
  GetPackageConfigurationCommandInput,
  GetPackageConfigurationCommandOutput,
  IoTClientResolvedConfig
> {
  readonly input: GetPackageConfigurationCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetPackageConfigurationCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: IoTClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    GetPackageConfigurationCommandInput,
    GetPackageConfigurationCommandOutput
  >;
  private serialize;
  private deserialize;
}
