import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  IoTClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../IoTClient";
import {
  CreateProvisioningClaimRequest,
  CreateProvisioningClaimResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CreateProvisioningClaimCommandInput
  extends CreateProvisioningClaimRequest {}
export interface CreateProvisioningClaimCommandOutput
  extends CreateProvisioningClaimResponse,
    __MetadataBearer {}
export declare class CreateProvisioningClaimCommand extends $Command<
  CreateProvisioningClaimCommandInput,
  CreateProvisioningClaimCommandOutput,
  IoTClientResolvedConfig
> {
  readonly input: CreateProvisioningClaimCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateProvisioningClaimCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: IoTClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    CreateProvisioningClaimCommandInput,
    CreateProvisioningClaimCommandOutput
  >;
  private serialize;
  private deserialize;
}
