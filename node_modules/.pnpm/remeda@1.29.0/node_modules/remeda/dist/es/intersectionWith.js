import { _reduceLazy } from './_reduceLazy';
import { purry } from './purry';
export function intersectionWith() {
    return purry(_intersectionWith, arguments, intersectionWith.lazy);
}
function _intersectionWith(array, other, comparator) {
    var lazy = intersectionWith.lazy(other, comparator);
    return _reduceLazy(array, lazy);
}
(function (intersectionWith) {
    function lazy(other, comparator) {
        return function (value) {
            if (other.some(function (otherValue) { return comparator(value, otherValue); })) {
                return {
                    done: false,
                    hasNext: true,
                    next: value,
                };
            }
            return {
                done: false,
                hasNext: false,
            };
        };
    }
    intersectionWith.lazy = lazy;
})(intersectionWith || (intersectionWith = {}));
