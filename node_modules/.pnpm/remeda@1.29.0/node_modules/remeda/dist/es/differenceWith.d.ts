import { LazyResult } from './_reduceLazy';
type IsEquals<TFirst, TSecond> = (a: TFirst, b: TSecond) => boolean;
export declare function differenceWith<TFirst, TSecond>(array: ReadonlyArray<TFirst>, other: ReadonlyArray<TSecond>, isEquals: IsEquals<TFirst, TSecond>): Array<TFirst>;
export declare function differenceWith<TFirst, TSecond>(other: ReadonlyArray<TSecond>, isEquals: IsEquals<TFirst, TSecond>): (array: ReadonlyArray<TFirst>) => Array<TFirst>;
export declare namespace differenceWith {
    function lazy<TFirst, TSecond>(other: Array<TSecond>, isEquals: IsEquals<TFirst, TSecond>): (value: TFirst) => LazyResult<TFirst>;
}
export {};
//# sourceMappingURL=differenceWith.d.ts.map