import { LazyResult } from './_reduceLazy';
type Comparator<TFirst, TSecond> = (a: TFirst, b: TSecond) => boolean;
export declare function intersectionWith<TFirst, TSecond>(array: ReadonlyArray<TFirst>, other: ReadonlyArray<TSecond>, comparator: Comparator<TFirst, TSecond>): Array<TFirst>;
export declare function intersectionWith<TFirst, TSecond>(other: ReadonlyArray<TSecond>, comparator: Comparator<TFirst, TSecond>): (array: ReadonlyArray<TFirst>) => Array<TFirst>;
export declare namespace intersectionWith {
    function lazy<TFirst, TSecond>(other: Array<TSecond>, comparator: Comparator<TFirst, TSecond>): (value: TFirst) => LazyResult<TFirst>;
}
export {};
//# sourceMappingURL=intersectionWith.d.ts.map