import { LazyResult } from './_reduceLazy';
type Flatten<T> = T extends ReadonlyArray<infer K> ? K : T;
export declare function flatten<T>(items: ReadonlyArray<T>): Array<Flatten<T>>;
export declare function flatten<T>(): (items: ReadonlyArray<T>) => Array<Flatten<T>>;
export declare namespace flatten {
    function lazy<T>(): (next: T) => LazyResult<any>;
}
export {};
//# sourceMappingURL=flatten.d.ts.map