import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  IAMClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../IAMClient";
import {
  UploadSigningCertificateRequest,
  UploadSigningCertificateResponse,
} from "../models/models_1";
export { __MetadataBearer, $Command };
export interface UploadSigningCertificateCommandInput
  extends UploadSigningCertificateRequest {}
export interface UploadSigningCertificateCommandOutput
  extends UploadSigningCertificateResponse,
    __MetadataBearer {}
export declare class UploadSigningCertificateCommand extends $Command<
  UploadSigningCertificateCommandInput,
  UploadSigningCertificateCommandOutput,
  IAMClientResolvedConfig
> {
  readonly input: UploadSigningCertificateCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: UploadSigningCertificateCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: IAMClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    UploadSigningCertificateCommandInput,
    UploadSigningCertificateCommandOutput
  >;
  private serialize;
  private deserialize;
}
